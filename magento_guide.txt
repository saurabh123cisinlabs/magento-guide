                  

====================================================================================================================================================================================================================                                                      
                                                               ++++++++++++++++++++++++++++++++++++ ECOMMERCE ++++++++++++++++++++++++++++++++++++++++++


Link: https://inviqa.com/blog/magento-2-tutorial-how-to-create-command-line-module

http://devdocs.magento.com/guides/v2.0/extension-dev-guide/build/di-xml-file.html



=> What is cache:


Cache is temprory files which saves configuration, layout, blocks, collection Data in the var/cache directory and increase the speed of magento by rendring pages using this stored cache files.

In Magento we have the following cache types:

Configuration (non-layout XML files)
Layouts
Blocks HTML output (Page blocks like headers, footers and callouts)
Translations
Collections Data
EAV types and attributes
Web Services Configuration


=> cache:clean will only clean out those tags which have been flagged as invalid? it deletes the cache storage by tags.

=> cache:flush will wipe out everything in the cache folder.



====================================================================== Magento Foler structure ++++++++++++++++++++++++++++++++++++++

======================================
app

app is one of the main locations within Magento 2. It contains all of our Application Logicso inside of app, you will see:

.htaccess – Ensures that contents are not readable via a web browser.
autoload.php – Handles registering of the autoloaders used by Magento 2.
bootstrap.php – Starts the bootstrap process.
functions.php – Registers global functions that are used throughout the application. Mainly the creation of value objects

code – This folder is where all of our code will be placed.
design – When working on themes, this is the place for you. Not only is your project located here, but you will also find the core Magento themes separated into frontend and admin sections.
etc – If you’re looking for project configuration, you will find it here.

    => The di.xml file configures which dependencies to inject by the object manager.

il8n – Translations are kept here.


Magento loads The configuration in the following stages:

Initial (app/etc/di.xml)
Global (<moduleDir>/etc/di.xml)
Area-specific (<moduleDir>/etc/<area>/di.xml)

======================================
bin

The bin directory is used for any binary files that are executable. The only Magento file in the bin directory is the Magento 2 CLI command that is used to run many maintenance tasks such as cache clearing, installing Magento, or running the indexers. There are many more commands, and this is where we will be looking to add functionality with our module.


======================================
lib

The lib folder is similar to its equivalent in Magento 1. It contains the main framework for Magento as well as some core libraries that are required. you should use this folder to install extra libraries into the system. Instead, I suggest that you should only use this folder if you can’t make a Composer package out of your library.

======================================
pub

The public folder is where your web server should point. Inside this directory are all of the auto-generated frontend assets that are used to render the site. It’s important to ensure the write permissions are set on these folders, otherwise you will run into some issues. But there is no active development done inside this directory. Instead, it’s used by Magento to place all assets that are needed. While in development mode, frontend assets are generated in real time; in fact, during development, you might find yourself running rm-rf pub/static/frontend/Theme.


However, when you go into production having assets generated in real time, you would add too much overhead to page loads, so php bin/magento setup:staticcontent:deploy generates these assets on deployment. While we are talking about this command, it is worth noting that we only need to run this when we are operating in production mode. When in default or development modes, these assets are automatically generated on each request.

=======================================

setup

This folder is only ever needed when you install Magento 2. As with Magento 1, you can customise the install process, but with the ease of using the web installer or the CLI, there is little to do in this folder.

===========================================

var

As with Magento 1, the var folder contains all of the cache assets and auto-generated class files etc. Anything that Magento creates (other than the generated CSS, JS etc.) will be found in this folder. It also contains the log and report directories so, if you have an exception log or debug info you want to see, take a look in this directory. Folders such as page_cache and cache are easy to understand. However, you will see a folder called generation and di. Don’t worry if you do not see the di folder. You will only see this if you have compiled the DI container via the CLI and are working in production mode.

These folders contain the compiled dependency injection container, as well as all of the generated factories that Magento needs to function. Again, during developer mode, these assets are generated in real-time, yet, when you move to production, there are more commands to run. 


================================================
Vendor

this folder is generated by Composer and contains all of the dependencies that are defined within the composer.json file.


====================================================================================================================================================================================================================


1.1 ONLINE MERCHANDISING:

++++++++++++++++++++++++++++
Marketing strategies:

Omnichannel: available in literally every touchpoint that a customer
wants to interact with the brand. This likely includes a brick-and-
mortar presence, website, social, phone and more. This also
includes the notion of a customer being able to easily switch
channels through their buying process. 

mobile->website->store->shop->mobile


++++++++++++++++++++++++++++++++++++
Multichannel: non-integrated touch points. A customer cannot
switch channels through the buying process. This more has to do
with silos of communication than anything else.


+++++++++++++++++++++++++++++++++++++
Affiliate marketing: using incentives such as cashback and other
rewards to encourage people to recommend your brand.


++++++++++++++++++++++++++++++++++++++
Social marketing: the use of social media (Facebook, Twitter,
Instagram, Pinterest, LinkedIn, etc) to spread the word about your
company and interact with customers.


++++++++++++++++++++++++++++++++++++++++
Email marketing: the use of email to continue brand awareness.
This remains as one of the most effective means of communication.


+++++++++++++++++++++++++++++++++++++
Word of mouth marketing: the most effective marketing strategy. A
customer loves your brand so much that they tell others about it.

===============================================================================================
Basic steps of setting up a new online store:

Strategy (90%): who is your competition. and what will set you
apart? What are you offering that your competitors will not offer?
Why do you want to get into this business?


Technology (10%):
• • Determining the platform to start with. If this is a small
company with limited funds, Magento is likely not the best
option. A SaaS platform is likely to be the best option. It has a
low cost of entry (monthly fees) and has many features.

• • Hosting: We like MageMojo, but there is a plethora of hosting
options on the market. It is good to talk with the hosting
company to determine the server specifications necessary to
find the right balance between computing power and paying
too much.

• • Deployment: getting the site going. Launching a new site is
much easier than migrating existing websites. You just have
to point the domain name at the store, remove any temporary
protections (such as a password entry present during
development), and you are good to go.

• • Maintenance: the basic level of maintenance (from a
developer’s point of view) includes patching. From a store
owner’s view, they need to keep the products up to date, fulfill
orders, and follow their strategy for growing the company.

=================================================================================


Search Strategies
• • Proceeding under the basis of this being site search.

++++++++++++++++++++++++++++++
• • Keyword search:

• • Customers need to find things on your website. Hopefully the
search bar is very visible. They will type in a query. Removing
the cruft (“and,” “the,” etc.), you are left with likely the
keywords of their search. These are the important words used
to find products on your website.

++++++++++++++++++++++++++++++++++++
• • Auto-suggest:

• • Based on the keywords and phrases used, smart search
engines will be able to find other keywords and phrases that
are similar to the one that the customer entered.

• • This will help guide them to the answer that they are looking
for.

++++++++++++++++++++++++++++++++++++++++++++
• • Guided Navigation:

• • This implies helping the customer reach the decision you
want them to reach (likely resulting in a purchase).

• • This technology is still up and coming and relatively expensive
to do right.

======================================================================================

Upsell:

• Visible on a product page.

• This tells customers of more expensive or (hopefully)
alternative choices to what they are looking at. This provides
awareness of other options on your website.

+++++++++++++++++++++++++++++++
• • Cross-selling:

• After the customer has added the product to the cart, we do
not want to show choices to what they have purchased. Doing
so might lead them to reconsider their options.

• Cross-selling involves showing the customer complementary
products: ones that will make using the original product easier
or more satisfying.


==================================================================================


SEO in ecommerce

• • Far beyond the scope of this work, but, here’s the summary.

+++++++++++++++++++++++++++++
• • Quality URL structure:

• Don’t use numbers or IDs in the structure. Instead, use words.
Not too many, but 75 characters or so in the url.

+++++++++++++++++++++++++++++++++++++++++
• • Good information architecture:

• This describes how your website is constructed.

• What are the paths to the categories? How do they relate
to the products? Is there any correlation? What about
breadcrumbs? How do you expect people to flow through
your website?

• Are there well-organized sections of content?

+++++++++++++++++++++++++++++++++++++++
• • Duplicate content:

• Using rel=”canonical” to avoid duplicate content flags.

• The canonical tag tells search engines which single URL is the
source for that product.

• Common within Magento will be a product in multiple
categories, resulting in the same product page accessible
via several URL paths (one for each category). If you don’t
tell Google which URL is the “master” (vs. the duplicates),
Google will pick one.

• Ensuring that those canonical links exist.

++++++++++++++++++++++++++
• • Sitemap
• Helps search engines find the pages on your website.

====================================================================================================================================================================================================================

1.2 SECURITY:

• • User data security standards in different markets:

• USA is one of the most lenient in the world.

• EU data privacy states that you cannot store most any
customer data outside of the EU. Used to have safe harbor
agreement in place, but that no longer exists.

• Canada just introduced very strict spam laws.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=

• • PCI standards and processes: (payment card industry)

• PCI SAQ (self-assessment questionnaire): a detailed piece
of information to assess whether you and your website are
following best security practices.

• Cardholder data must not ever be stored or transmitted
unencrypted.

• Unencrypted cardholder data must not be seen by unqualified
individuals.

• Encrypted cardholder data is still subject to safety measures.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

• • PA-DSS / PCI-DSS rules and practices:

• Every organization that handles credit cards needs to comply
with PCI DSS (Payment Card Industry Data Security Standard).

• Build and maintain a secure network.

• Protect cardholder data.

• Implement strong access control measures.

• Ensure the maintenance of information security policies.

• Vendors that make and sell payment applications need to
meet PA DSS (Payment Application Data Security Standard).

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

SSL Usage in ecommerce

• SSL when transmitting cardholder data is a must.

• Preferably use TLS 1.2 but limited due to older browsers that
no longer support that.

• Browser vendors are pretty much forcing all sites to switch to
https.

SSL: Secure Sockets Layer (SSL) is a standard security technology for establishing an encrypted link between a server and a client—typically a web server (website) and a browser, or a mail server and a mail client.

https://www.entrustdatacard.com/pages/ssl

=====================================================================================================================================================================================================================

1.3 USER EXPERIENCE:

• • Usability principles and issues in ecommerce

• Beyond the scope of this study guide. Excellent resources:

• Interface must be easy and quick to understand.

• Best is that it doesn’t deviate too much from other websites /
industry leaders such as Amazon.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

• • Building a good user experience in ecommerce — best practices

• Maximum of 5 options

• Important to give the user context of their position on the
website

• Clear header navigation (with possible drop-down menus)

• Breadcrumbs

• Good detail in footer

=====================================================================================================================================================================================================================

1.4 LAWS AND REGULATIONS:

• • Disability compliance issues

• • Privacy

=====================================================================================================================================================================================================================

1.5 SYSTEM DEVELOPMENT:

• • Agile, SCRUM, and Waterfall

• Waterfall: working toward a once-in-a-long time release
schedule.

• Agile and Scrum are very similar.

• Agile is a complete software development cycle. Usually
focuses on smaller increments.

• Scrum is based around a sprint (a set period of time for
work to get done). Commitments are made to ensure that
the work is completed.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

• • Basic terms and core constituents of system development life
cycles:

• Identify Current Problems: understanding problems.
Customers often do this on their own, although it is good to
get a second opinion.

• Plan: developing a roadmap for getting the problem solved.

• Design: architecting the solution: what pieces need to be built.

• Build: writing the code to solve this problem.

• Test: assigning to QA to ensures that everything works as
expected.

• Deploy: deploying the update.

• Maintain: starting the cycle over again.

====================================================================================================================================================================================================================

1.6 OMNICHANNEL:

• • Complex inventory management:

• Means maintaining inventory in multiple locations. This could
take into account warehousing, retail locations and possibly
drop-shipped inventory quantities.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• •How to handle out-of-stock merchandise:

• Online: can drop-ship from suppliers or distributors.

• Retail / brick-and-mortar: endless aisle systems allow
customers to order items that are out of stock. This will not
eliminate the problem of someone seeing that a product
is not available anymore and leaving, but it might help in
some situations.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• • Drop ship:

• When the manufacturer or another company ships the
product. This can reduce warehousing needs but will
significantly eat into profits.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• •Buy online / ship to store:

• The latest trend. This can be an effective means of keeping
customers in the store. While it might not save the company
any money (as they still often have to ship it), they can expect
more people to make purchases while in the store. Walmart
has seen this enough that they have offered steep discounts
on certain Site-To-Store purchases.

====================================================================================================================================================================================================================

1.7 DATA ANALYTICS AND TESTING:

• • Google Universal Analytics:

• Probably the most powerful web analytics platform on the
internet (free). This platform helps track and correlate much
information about visitors on the website and their purchases.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=
• •A/B Testing:

• Shows customers the A (original) or B (updated) version. This
is good to see what users prefer more: which performs better
and achieves more goal completions.

• The next step is Multivariate testing. This can pit multiple
versions against each other to find a winning combination.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• • Optimization:

• The process of continually editing and working with the
website to increase sales.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• •Personalization:

• Ways to make the website be unique to a user. This could be
things like using the customer’s name, showing them products
that they are interested in (based on other purchases),
or adjusting sales emails to how they have responded to
previous emails.

=====================================================================================================================================================================================================================

1.8 TAXES:

• • VAT:

• Value Added Tax

• Assessed at different times in the production process.

• Sales tax is assessed on the final value of a sale.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• • Digital VAT:

• Tax assessed on software as a service sales.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
• •In-state and out-of-state:

• In-state: selling from one state in the US (such as KS) to
someone in the same state.

• Out-of-state: selling from one state in the US (such as KS) to
someone outside of the state, such as MO.

• Cross-border: Selling from one country into another.


+==================================================================================================== Questions=====================================================================================================

=> What is the difference between omnichannel and multichannel retailing?

• • Multichannel means that each channel of interacting with a
company is siloed. There is little organization and universal
strategy. Seems to be mostly an anti-pattern.

• • Omnichannel is where all lines of access to the company are
coordinated. Similar teams. The goal is to reduce the friction across
the experiences and make it as seamless as possible.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> How can you set up a product catalog for best search results, taking into account issues of duplicate content, meta content, meta title, keyword search terms in product description, attribute weight, and so
on?	

• • Key is to think about what people are looking for and use those
words. It is far more involved than this, as talking to customers,
research in Google Analytics, and watching results over time will
make the difference.

• • Duplicate content is bad. Thus, the rel=”canonical” meta tag is very
important to tell Google what is the “master” page. Magento by
default brings in this issue with products: products are viewable
just under the root domain (https://example.com/product-name)
and also viewable under each category (https://example.com/
category-name/product-name). Ensuring that the rel=”canonical” is
on will make that tag point to the product under the root domain.

• • Meta content (meta description?): is a shortened description that is
often used by Google under the title of the page (the title tag). This
is very important that there aren’t duplicate descriptions as these
can be customized to increase a customer’s likelihood of clicking
your url.

• • In the baked-in catalog search, the attribute weight determines
how likely Magento will return a match from that attribute.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is a “canonical link element”?

• • <link rel=”canonical” href=”http://example.com/wordpress/seo-
plugin/”>

• • This link tag tells search engines what is the original page. This
is helpful to clean up duplicate content. Each of those duplicates
should then point back to one page, and the page authority will be
focused on that one spot.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What “social merchandising” techniques and tools are used in ecommerce?

• • The features or tools that encourage people to interact with your
website.

• • Could be a wishlist or sharing buttons.

• • This also would include tailoring related products or suggestions to
that person.

• • Reviews are means of attracting social proof, which is very
effective in both generating more content for a website as well as
encouraging other customers to purchase.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> When is SSL required when transacting data online?

• • SSL is required for any time credit card information is transferred
from a customer’s computer.

• • However, browsers are making SSL required. For example, a
message now appears when you log into a website (entering in
your password), and you are not on an SSL connection.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=

=> What is PA-DSS? When should PA-DSS be applied?

• • It helps achieve PCI-DSS compliance. A good overview for this is
the PCI Awareness Training.

• • All organizations that handle cardholder data must be PCI-DSS
compliant.

• • PA-DSS is validating compliance of a system or a program. PCI-DSS
is the validation of an organization (meaning the people, systems
and hardware).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are typical omnichannel challenges?

• • How to allow a customer to switch channels seamlessly?

• • Personalization of the experience to the customer depending on
what channel they are a part of.

• • Real-time inventory tracking.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is the process for getting a site certified as PCI compliant?

• • Determine merchant level.

• • Visa

• • MasterCard

• • This determines whether a SAQ will work or if you have to
have an on-site assessor.

• • Determine the SAQ.

• • Complete the SAQ.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are best practices for protecting ecommerce user data?

• • Don’t store cardholder or other sensitive data. It is good to see the
“saved credit card” option gone with Magento 2.

• • Be careful with who handles cardholder data.

• • Use strong hashing for passwords. This is another benefit of
Magento 2.

• • Use https on the website to protect cardholder and other data.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are the best usability practices when building an online catalog and checkout system?

• • As alluded to above:

• Don’t stray too much from what the user considers the norm.
This can vary per demographic or age group.

• • Keep things simple:

• < 5 choices
• Clear calls to action (such as Add to Cart or Checkout)
• Enough whitespace to set apart important elements.
• Keep the cart link obvious, don’t assume that the customer will
always go straight to checkout.
• Ensure the user has context for where they are on the website.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=

=> What are the main characteristics of Agile and Waterfall development methodologies?

• • Agile is iterative; Waterfall is a longer period of work with less
opportunities for feedback.


• • Waterfall was more beneficial in the days of software distribution
on CD-ROM. You needed to completely finalize the software before
shipping it as delivering bugs to customers was a very bad thing.
Also, it needed to have plenty of upgrades for the user to feel it
was worthwhile to purchase and upgrade.

• • Agile fits better with other delivery means (automatic).

• • Because one can deploy often, it gives much faster feedback, and
the product doesn’t have to be polished. Instead of one release a
year, you can release weekly or even daily.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are SMART requirements?

• • Specific: the task must be defined.

• • Manageable: the task must not be of gargantuan proportions.

• • Assignable: the task must be able to be given to someone(s).

• • Relevant: the task must be able to be completed given current
bandwidth.

• • Time-related: the task must be able to be completed within a
certain time.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are the requirements of the EU “cookie law”?

• • Required after May 2011 (though, to my understanding, it is very
poorly enforced).

• • It requires that a website give customers the option to opt out of
cookies being set on their computer.


• • Requires that a website:

• tells visitors that the website uses cookies.

• explains what the cookies do

• gets their approval for storing cookies on their computer.


• •
The Cookie Law is a piece of privacy legislation that requires websites to get consent from visitors to store or retrieve any information on a computer, smartphone or tablet.

It was designed to protect online privacy, by making consumers aware of how information about them is collected and used online, and give them a choice to allow it or not. 

It started as an EU Directive that was adopted by all EU countries in May 2011. The Directive gave individuals rights to refuse the use of cookies that reduce their online privacy. Each country then updated its own laws to comply. In the UK this meant an update to the Privacy and Electronic Communications Regulations.

=======================================================================++++++++++++++++++++++++++++++++++++==========================++++++++++++++++++++++++++===========================+++++++++++++++++++=======

                                                         ++++++++++++++++++++++++++++++++++++=MAGENTO 2 ARCHITECTURE ++++++++++++++++++++++++++++++++++++++++++

2.1 BASIC CONCEPTS: MVC, TEMPLATES AND LAYOUTS, OPEN SOURCE: 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Architecture in Magento 2: What is Magento architecture based on, and how does Magento architecture affect the Magento 2 application?

• • Magento is built on the MVC idea. Model / View / Controller.

• • Model is the data. Ultimately, the model concept goes way
deeper than this into data storage and retrieval.

• • View is how the data is presented. This is the HTML and CSS
side.

• • Controller is the link between the model (data) and the view.
This provides the business logic for what data to show where.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Database sharding and Varnish caching:

• • (EE only) Sharding is splitting up a database into multiple “shards” (think of a broken glass).

• • This allows for performance gains and scalability in different configurations. The database can be split into different segments: checkout orders and products.

• • This also allows data to be backed up, data analysis without affecting the master database, and scalability.

• • Varnish caching

• Varnish is a reverse-proxy caching engine.

• It sits in front of the web server (apache or nginx) and if a request is cached, it will return that. This results in a very low latency caching engine. Response times are often sub 200ms.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Templates and layouts in Magento 2: Basic responsibilities and roles when executing Magento code

• • Templates contain the HTML; layouts are XML files that contain instructions for what to show, where, and details for how to show it.

• • The layout XML files are merged together to form one set of instructions per page. This gives tremendous capabilities for customizing a website.

• • Templates are PHP and HTML. They accept PHP objects and other data and render them as HTML.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Extending Magento 2 functionality with a code change or enabling an extension—basic concepts and process steps: 

• • To extend Magento, the first thing is to determine what needs to be
changed. This specification is signed off by the customer and work
can begin.

• • It is important that modules don’t get too big. This makes them
difficult to manage and maintain. Follow the Single Responsibility
Principle.

• • After registration.php and etc/module.xml are present, you can run
bin/magento module:enable ((MODULE NAME)).

• • This turns the module on, and development can continue.

• • You will likely have to run bin/magento setup:upgrade and bin/
magento setup:di:compile.

• • Once the module is complete, you would commit it, have it peer-
reviewed, and ensure that it passes QA and then deploy to
production.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Configuring site design using options found in the admin under Content > Design > Configuration:

• • This was a much improved area in Magento 1 over Magento 2. The
design configuration is found in Content > Design > Configuration.

• • Select the store / theme combination that you wish to work with,
and click Edit.

• • This pretty much replaces the System > Configuration > Design
area. It is specific to the theme, and makes much more sense to
place in this location.

• • Adding configuration to this area is still not the easiest.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Installing and enabling/disabling Magento 2 extensions:

• • It is very important to first review the code (line-by-line) of each
extension installed. I’m always amazed at how many security
vulnerabilities and sending requests back to the module
developer’s servers (phoning home) that I find.

• • Installing the module is very easy (instructions for a one-off
Magento instance not connected to builds or anything):

• • SSH into the server

• • Copy the new module files

• • bin/magento module:enable ((MODULE NAME)) — omitting
this will enable all modules

• • bin/magento setup:upgrade

• • bin/magento setup:di:compile

• • bin/magento setup:static-content:deploy

• • bin/magento cache:clean

===================================================================================================================================================================================================================

2.2 MAGENTO APIS AND THIRD-PARTY INTEGRATION: 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Types of API

• • REST and SOAP
• • Rest is URL and HTTP code based. SOAP is XML based.

API authentication

• • OAuth 1.0a (why not 2?)
• • Mobile applications can use tokens
• • Administrators and customers can use login credentials (which are converted into a token)

API users
• • These are the same as a user if you are using token-based authentication.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Differences between Magento 1 and Magento 2 integration options:

• • Magento 2 is much more streamlined. With Magento 1, you worked
with a unique set of users for the API. There were also unique
permissions with Magento 1 that are now no longer apart of 2.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Third-party integration with Magento 2 CE and EE
• • Enterprise has the following additional API endpoints:
• • CustomerBalance
• • GiftCardAccount
• • GiftRegistry
• • GiftWrapping
• • Reward
• • RMA

====================================================================================================================================================================================================================

2.3 MAGENTO WEBSITES, STORES, AND STORE VIEWS:

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Website (store_website table), store (store_group table), and store view (store table) configuration:

• • There are three layers of customization for configuration,
categories, products, and CMS features. Many Magento
installations have just one website, store, and store view.

• • Website: represents a unique domain name. This is the
“parent” of the whole system. It allows you to maintain
different lists of customers and different product pricing.
Products are assigned to a website.

• • Store: represents groupings of store views. This is not used
much in products or categories.

• • Store view: often a different language but could be a different
store. This is used to configure pricing, attributes, and more
for categories and products.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The application of scope to websites, stores, and store views:

• • Say you have three brands: Widgets, Headphones, and Stuffed
Animals available in English and Spanish. You could put all three on
unique websites; you can switch a store on a website; and you can
also switch the language on a website.

• • Websites and store groups are similar in functionality. They give flexibility for how one wants to set up a site.

• • Store > Configuration is specified in either the global, website or store view scope.

• • Product details are specified in the global, website or store view scope.

• • Websites: are often a unique domain name or a brand. Payment and shipping methods are determined in this scope.

• • Store (groups) can be also a unique domain name or brand but they fit inside of a website. 
** Root categories are associated with a store. 
** No store configuration values are set on this level.

• • Store (views) is what your customers browse. This shows products and is themed. 
Often there are switchers to change language (from English to Spanish). 
There will also be links to go to the Widgets’ or Headphones’ websites. 
It is important to keep cookies in consideration if you want products to be shoppable across all categories. 
Most store configuration values specified at this level are related to names and very few features can be enabled.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Display of product catalogs in websites, stores, and store views:

• • If a Magento installation is NOT in single-store mode (Stores > Configuration > General > Single-Store Mode):

• Products are assigned to a website. If a product is not assigned to a website, it will not be visible on the website.

• You can also change the visibility and status for a store view to affect whether a product is visible for a store view or not.

• You can change title, description, etc. on a website or store view basis (not for a store).

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Administration of websites, stores, and store views: 

• • Found in Stores > All Stores area.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Localization, taxes and pricing in websites, stores and store views:

• • Again, these are customized in websites and store views (but not for a store).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Product attribute scope:

• • Applies to either global (everything) or a store view. If it is global, store view will not change the value. If the attribute’s scope is set to be store view, then it will be dependent on the store’s scope. 
    If you look at the table, store_id is mapped to the store table.

=====================================================================================================================================================================================================================

2.4 MAGENTO EDITION DIFFERENCES (ENTERPRISE, COMMUNITY):

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Advantages and disadvantages of each edition:

• • If a customer has the money, Enterprise is the way to go. There are a lot of pre-built modules that will save development time. 
They are tested and stable. Enterprise has Magento support whereas Community doesn’t.

• • In Magento 1, the difference was a few modules and poor support.
Magento has been fixing the support and adding to the modules.

• • Advantages of EE:

• Database scalability
• Advanced search
• Job queue
• Google tag manager (can easily add this into CE)
• Additional admin logging
• Customer attributes
• Support
• Additional modules to better customer experience

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Cache, indexing, search, and other feature differences:

• • There is no difference in CE vs EE caching other than the use of message queues (with RabbitMQ)

• • Same with indexing

• • Solr is available but will be changed out to ElasticSearch

====================================================================================================================================================================================================================

2.5 MAGENTO CLOUD:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Features and functions: 

• • Magento’s Enterprise hosting solution. According to people I have talked to at Magento, this allows a single source of responsibility for anything happening at an application or hosting level. 
They wrote the software, and they should be the best ones to keep the software running.

• • Contains three areas:

• Integration: testing and development, up to 8 unique branches in different environments.
• Staging: includes database, environment variables, configurations and Fastly.
• Production: a three node high-availability system.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Advantages:

• • Magento manages it. They have invested in making it fast and a good platform to build on.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Differences from other Magento editions:

• • This is an additional product (per my understanding). You pay the yearly fee for EE and the hosting on top of it.

====================================================================================================================================================================================================================

2.6 MAGENTO SOLUTIONS:

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Bluefoot
• • Bluefoot is a new CMS system that has been integrated into EE. It gives a high-quality WYSIWYG editor with drag and drop widgets. 
It makes creating pages much more easy and intuitive.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

B2B

• • A new package for 2.2 that makes B2B transactions more streamlined.

• • It provides a system for quoting, managing groups of customers, and better inventory management.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Magento Business Intelligence:

• • A new system for creating high-quality and informative reports.

• • The heartbeat of how your store is functioning. A Google Analytics for the business side of a company.

====================================================================================================================================================================================================================

2.7 SEARCH ARCHITECTURE:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Solr:

• • An open source search platform. Right now, Magento EE natively integrates with this.

• • There is some configuration needed.

• • Fairly easy to set up and produces lightning fast and relevant results.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Elasticsearch:

• • Now supported in Magento EE 2.1.

• • From a features standpoint, fairly similar to Solr

• • Appears to be somewhat more popular than Solr

====================================================================================================================================================================================================================

2.8 INFRASTRUCTURE REQUIREMENTS:

Caching, Varnish, Redis, Memcached

• • Magento can function with just PHP, Apache / Nginx, and MySQL.

• • For better performance, Varnish is tightly integrated.

• • Redis can be used to store customer sessions and caching (faster than the file system).

• • Memcached is also available but seems that industry support for this is waning.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sessions:

• • Default is stored on the file system. This can slow down response times.

• • Memcached and Redis are also available.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Database sharding:

• • There are some development limitations regarding this:

• • Cannot write directly to the database (need to use the database interface instead, which is best practice anyway).

• • Cannot use JOINs that affect the sales or quote databases.

• • Use foreign keys to tables in the checkout sales or main databases.

• • Should configure the split database solution before putting Magento into production. After is more difficult.

• • You must separately / manually backup the other databases when using Magento’s DB backup (which is terrible)

=====================================================================================================================================================================================================================

2.9 COOKIES:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Cookie use and handling:

• • Cookies are used to identify the computer (shopper) to the server. PHP looks at the frontend cookie and returns the session information to Magento.

• • Not saving cookies effectively renders the purchasing part of Magento useless. However, localStorage would now be somewhat of an option.


===================================================================================== QUESTIONS ====================================================================================================================

=> What are the unique advantages of Magento 2 architecture when building a site?

• • Magento is a powerful ecommerce platform.

• • It is very flexible and customizable.

• • It comes as a functioning system. With just a little setup and configuration, you can receive orders and fulfill them.

• • When you need additional features added, Magento offers the ability to reach deep into the system and change most every aspect of how it functions.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are the two methods available in the Magento 2 Admin (in the Content section) to change the design of a site?

• • Content > Configuration

• For each store view, you can change the theme and the settings available for use with it.

• • Content > Schedule

• You can change the theme for a specified period of time. This might apply to a seasonal design update. This is not used as often.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> How can you change the layout of catalog pages using Magento 2 Admin functionality?

• • Products > Catalog > Choose Product > Design > Layout:

• • You can change the style of layout: some of the default options are 1 column, 2 columns with left sidebar, 2 columns with right sidebar, 3 columns and text.

• • You can determine where the product options display. Normally, this is left as the default.

• • You can specify layout update XML. While this might seem handy, we have found this gets in the way more often than not as a hack (if used for multiple or many products).
 It should be only used for a one-off update.

• • The reason is that if you are making changes here for a number of products, likely those changes should be made into the site’s code instead of here. 
These are easy to miss later resulting in additional developer time trying to find what is making the change.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> How is product data constructed in Magento 2 (product attributes, inventory, price, images, etc.)?

• • Product attributes are pulled from either the store view or the default (0) store if nothing is specified.

• • Inventory is associated with a specific website.

• • Tier pricing is associated with a website, but flat product pricing can be changed on a store view basis.

• • Images are associated with a store.

• • This information is pulled out of the database and is rendered on the frontend.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> When does product inventory change (decrease) during the ordering process? How can an administrator control the inventory change?

• • When an order is submitted, the inventory for that product is decremented by the quantity ordered. Keep in mind that this does not reflect the quantity on hand. 
In accounting terms the quantity in Magento’s inventory is really the quantity available (to be sold).

• • Administrators can change this in product management, in the quantity field.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is RMA in Magento 2, and what are the RMA types?

• • Return Merchandise Authorization. This allows a store to know what products are being returned and possibly offer return labels.

• • The three RMA types are: Store Credit, Refund, Exchange:

• • The customer can request one of these types when they request an RMA from the Account Dashboard (within the completed order).

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are the required attributes for creating a CMS page using Magento Admin functionality?

• • Page title (provides the default value for the meta title tag and the
url key)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is the process for creating a product, and which catalog data is used in this process?

• • Products > Catalog > Add new product.

• • If you select the drop-down menu, you can choose what type of product to create.

• • You must specify:

• Any custom attributes that have been marked as required without a default value.
• Price
• Product Name
• SKU

• • It is good to specify:
• Product image
• Description
• Short description
• SEO-related fields, such as Meta Title and Meta Description

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> How is the price defined for a product, and what methods are available for changing product price using Magento 2 Admin functionality?

• • Simple pricing is set in the Price field.

• • You can also update pricing in the Advanced Pricing link:

• Here you can set tier pricing for customer groups and specific quantities.

• • Via Mass Action update on the catalog grid.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What marketing and merchandising features are available only in Magento 2 Enterprise Edition?

• • Personalized content
• • Improved merchandising
• • Bluefoot CMS
• • Reward / loyalty points
• • In-Store Credits
• • Gift Registry and Cards
• • Private Sales
• • Bulk Ordering
• • Comprehensive:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What payment methods and payment functionality are available only in Magento 2 Enterprise Edition?

• • Cybersource
• • eWAY
• • Worldpay

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What are the differences between Elasticsearch and Solr?

• • Elasticsearch allows multiple types of documents in an index. Solr requires you to do the work at the application level.

• • Elasticsearch is more configurable on the fly.

• • Elasticsearch supports complex nested types.

• • Solr supports grouping, but Elasticsearch doesn’t.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is caching, and why is it important?

• • Caching saves a snapshot of pre-generated, filtered or calculated data.

• • This saves the generation time, resulting in faster responses.

• • Faster responses mean less wait time for a customer (or admin) on the website.

• • Less wait time means happier people.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> When would you recommend sharding a database?

• • In very large-scale deployments. This would allow the databases to be separately tuned, and some can then be used in read-only mode (like the catalog tables for the frontend).

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is Bluefoot?

• • Bluefoot is a CMS package that adds drag & drop capabilities to the admin editing experience.

• • It is also very extensible to add new types of elements.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What functions are included in B2B? In Magento Business Intelligence?

• • B2B

• Custom quotes / pricing
• Unique catalogs for customers
• Quick order
• Credit limits
• Loyalty
• Requisition lists

• • Magento Business Intelligence

• Replicates store data and sends it to Magento
• Transforms data and analyzes it
• Creates new joins and reporting metrics
• Goal is to be the one connected source for a business’ ecommerce data.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> How are cookies used in Magento 2?

• • They are used to associate a customer (or admin) with PHP’s session storage. This session storage contains the transient information about this person.

• • They are used also to transfer certain types of information to the user. In other words, they store certain types of transient data that is related to that user.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> Which customer data is saved in cookies, and how is it used in the storefront using Magento native functionality?

• • “Cart”: the association with the customer’s shopping cart
• • “Compare”: the items in the customer’s Compare Products list
• • “Customer”: an encrypted version of the shopper’s customer ID
• • “Customer_Auth”: Whether or not the customer is logged into the store
• • “Customer_Info”: Encrypted version of the customer’s group
• • “Frontend”: customer’s session ID (most important cookie)
• • “Last_Category”: last category visited by the shopper
• • “Last_Product”: the most recent product viewed by a shopper
• • “Persistent_Shopping_Cart”: a link to information about the shopper’s cart and viewing history
• • “RecentlyCompared”: Items recently compared by the shopper
• • “STF”: information on products shopper has emailed to friends
• • “Store”: The store view or language chosen by the shopper
• • “User_Allowed_Save_Cookie”: whether or not the customer allows cookies to be saved
• • “Viewed_Product_Ids”: Products recently viewed by the shopper
• • “Wishlist”: An encrypted list of products added to the shopper’s wishlist
• • “Wishlist_Cnt”: The number of items in the shopper’s wishlist

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> What is Swagger, and how is it used in Magento?

• • Swagger is an API framework.

• • It provides a standardized way to define and document API access.

• • Magento uses it for their REST API 

=====================================================================================================================================================================================================================

                                 ========================================================= FEATURES AND FUNCTIONALITY =========================================================================

3.1 MAGENTO ADMIN: CONCEPTS, FEATURES, AND USAGE

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Sections of the Admin:

• • Dashboard: the entry-point into the system
• • Sales: orders, invoices, and shipping
• • Products: management of the product catalog
• • Customers: customer management
• • Marketing: promotions, SEO, and user reviews
• • Content: CMS pages and blocks
• • Reports: Magento reports on sales and customer interaction
• • Stores: Configuration, store setup, attributes, customer groups, taxes and currency
• • System: Cache management, import/export, permissions

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

User roles and role scope:

• • User roles are groupings of allowed functionality.
• • Magento ACL is very granular to grant or deny access to most every area of the system.
• • Set up a role to say where users can be allowed or denied.
• • Easy to assign or change user access.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Grids and views

• • Two types of Magento grids: UI component and old style.

• • Many grids have a field at the top for filtering that column (better UX than UI component style).

• • UI component type (products and customers):

• Filtering link > section for determining what to see
• More flexible and editable
• Allows for setting bookmarks

• • Old style:
• Essentially the same as Magento 1, but a different theme. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

How is role scope used?

• • To limit admin access to specific areas of a system. An example is
a CSR where you might not want them to have access to system
configuration. You might only give them access to the Sales and
Customers area.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

How can you customize a grid display for your own purposes?

• • You can:

• Drag/drop columns to reorder them
• Show/hide columns
• Save specific column configurations for later access.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

In which section of the Admin are most initial configuration options located?

• • Store > Configuration

=====================================================================================================================================================================================================================

3.2 CONTENT STAGING AND PREVIEWS:

Staging timelines

• • Provides context for when changes are made (or will be made) to content. Viewing staged content

How do you set a banner to appear on a specific date?

• Clicking “Schedule New Update” on a product page.

How do you preview the result of setting content to appear at a future
time?

• Clicking “Preview” next to the schedule content change.

=====================================================================================================================================================================================================================

3.3 CATALOG:

Product types

• • Simple
• • Configurable
• • Grouped
• • Virtual
• • Bundle
• • Downloadable
• • Giftcard (EE only)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Product creation

• • Products > Catalog > Add New Product
• • Enter the required fields.
• • Make sure to switch Enabled to Yes and assign a website (if in multi-store mode).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Product attributes and attribute sets

• • Attributes and attribute sets are configured in Store > Attributes and Store > Attribute Sets

• • Attributes:

• Describes products in a structured and defined, yet very flexible way.
• The details are stored in tables associated with the particular data type: text, varchar, int, decimal. With this, they can be simple text entry or a select list (used with configurable products).
• You can assign a scope to attributes whether they are for the website or store view.

• • Attribute sets:

• A set of attributes.
• These attributes sets allow attributes to be grouped into “folders.”
• They are especially useful for different types of products. For example, a t-shirt will need different attributes than a microphone.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Categories

• • Lists of products on the frontend.

• • Can display text and customize the display of these products.

• • Products can be viewed in list (with the short description) or grid mode.

• • Product can be filtered by attributes (layered navigation)

• • Products can be sorted and the number of products per page can be controlled.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Visual Merchandiser:

• • Tool to position products in the category listing. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

What are the different product types in Magento 2 Enterprise Edition?

Gift card is only available in EE. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

What are the minimum attributes to create a simple product?

• Product Name
• SKU
• Price

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

What is the product attribute set used for in Magento 2? Can different product types use the same attribute set?

• • Attribute sets are a grouping of attributes. They are used to specify details about unique types of products. 
For example, one might be a Shirt or Apparel category (with a size attribute) whereas another type might be Microphone (with a connection type attribute).

• • Yes, multiple product types can use the same attribute set.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

What is the process of creating layered navigation (including category creation and attributes, product attribute types, and product-category associations)?

• • Create a category to display t-shirts on the front end.
• • Ensure that “Is Anchor” is set to “Yes.”
• • Create an attribute called “size:”
• • Type is a Dropdown list.
• • Values are Small, Medium, and Large.
• • You must also ensure that “Use in Layered Navigation” in Storefront Properties is set to Filterable (with results).
• • You can change the order that this attribute is visible with the Position attribute.
• • Create three products and specify the size attribute for each: each one corresponding to a unique item in the list above.
• • Assign those products to the category.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

What are the different ways in which an Admin user can update product inventory?

• • Modify product, and choose Advanced Inventory.

• • Mass edit inventory:

• Check the box next to a product in the Products > Catalog grid.
• Advanced Inventory tab
• Set the QTY.
• Keep in mind that this doesn’t adjust the inventory, rather it will reset it. This would be useful in very few and limited cases.

• • API integration:

• GET /V1/stockItems/:productSku
• PUT /V1/products/:productSku/stockItems/:itemId
• GET /V1/stockItems/lowStock/
• GET /V1/stockStatuses/:productSku

• • CSV file import

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

How can you display associated products in the cart and on the product page?

• • Displaying associated products in the cart is set through cross-sells. They are selected from the most recently added product to the cart.

• • Displaying products on the product page is done through upsells and related products.

• • Both of these are set on a product-by-product basis in Products > Catalog > Product. These options are chosen in the Related Products, Up-Sells and Cross-Sells section.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

How can you create page redirects for specific search requests?

• • Marketing > Search Terms > Add New Search Term

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Can a customer submit a JPG image with a product review?

• • Not by default. There are ways to link to an image, but they cannot upload an image.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

What are the options for displaying a product video?

• • You can insert it into the product description.
• • You can add it using the Magento product video functionality.

=====================================================================================================================================================================================================================

3.4 SHOPPING CART:
































































































































